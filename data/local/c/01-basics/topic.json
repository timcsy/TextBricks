{
  "type": "topic",
  "name": "01-basics",
  "title": "基礎語法",
  "description": "C 語言基礎語法和核心概念",
  "documentation": {
    "content": "# 基礎語法\n\n## 主題簡介\n\n本主題涵蓋 C 語言的基礎語法和核心概念，是學習 C 語言的起點。\n\n### 📚 內容概覽\n\n#### 01. 第一個程式\n- Hello World 程式結構\n- main 函式的角色\n- #include 指令\n- return 語句\n\n#### 02. 變數與資料型別\n- 變數宣告和初始化\n- 基本資料型別（int, float, double, char）\n- 型別修飾符（short, long, signed, unsigned）\n- 常數宣告\n- 型別轉換\n\n#### 03. 運算子\n- **算術運算子**：+、-、*、/、%\n- **比較運算子**：==、!=、>、<、>=、<=\n- **邏輯運算子**：&&、||、!\n- **賦值運算子**：=、+=、-=、*=、/=\n- **遞增遞減**：++、--\n\n#### 04. 輸入輸出\n- printf - 格式化輸出\n- scanf - 格式化輸入\n- 格式化字串（%d、%f、%c、%s 等）\n- 轉義字元（\\n、\\t 等）\n\n#### 05. 註解\n- 單行註解 //\n- 多行註解 /* */\n- 註解的最佳實踐\n\n### 🎯 學習目標\n\n完成本主題後，你將能夠：\n1. 撰寫基本的 C 程式\n2. 正確使用變數和資料型別\n3. 運用各種運算子進行計算和邏輯判斷\n4. 與使用者進行輸入輸出互動\n5. 撰寫清晰易讀的程式碼註解\n\n### 💡 學習建議\n\n- 先學習「第一個程式」了解 C 程式結構\n- 接著學習「變數與資料型別」掌握資料儲存\n- 學習「運算子」進行各種運算\n- 透過「輸入輸出」實現互動程式\n- 養成良好的「註解」習慣\n\n### 🔗 相關主題\n\n學習完基礎語法後，建議繼續學習：\n- **02-control-flow** - 控制流程（條件判斷、迴圈）\n- **03-functions** - 函式（程式碼組織和重用）\n"
  },
  "subtopics": [
    "01-first-program",
    "02-variables",
    "03-operators",
    "04-input-output",
    "05-comments"
  ],
  "display": {
    "icon": "📝",
    "color": "#2196F3",
    "order": 1,
    "collapsed": false,
    "showInNavigation": true
  }
}
